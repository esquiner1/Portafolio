---
import SocialPill from './SocialPill.astro';

import NextJS from '../icons/NextJS.astro'
import Tailwind from '../icons/Tailwind.astro'
import GitHub from '../icons/GitHub.astro';
import Preview from '../icons/Preview.astro';
import Java from '../icons/Java.astro';
import PostgreSQL from '../icons/PostgreSQL.astro';
import Python from '../icons/Python.astro';
import Cmm from '../icons/Cmm.astro';
import NestJS from '../icons/NestJS.astro';
import React from '../icons/React.astro';
import Docker from '../icons/Docker.astro';

const TAGS = {
    NEXT:{
        name: 'Next.js',
        class: 'bg-black text-white',
        icon: NextJS
    },
    TAILWIND:{
        name: 'Tailwind',
        class: 'bg-[#003159] text-white',
        icon: Tailwind
    },
    JAVA:{
        name: 'Java',
        class: 'bg-[#003159] text-white',
        icon: Java
    },
    POSTGRESQL:{
        name: 'PostgreSQL',
        class: 'bg-[#003159] text-white',
        icon: PostgreSQL
    },
    PYTHON:{
        name: 'Python',
        class: 'bg-[#ffeaa8] text-black',
        icon: Python
    },
    CMM:{
        name: 'C++',
        class: 'bg-[#003159] text-white',
        icon: Cmm
    },
    NESTJS:{
        name: 'NestJS',
        class: 'bg-[#003159] text-white',
        icon: NestJS
    },
    REACT:{
        name: 'React',
        class: 'bg-[#003159] text-white',
        icon: React
    },
    DOCKER:{
        name: 'Docker',
        class: 'bg-[#003159] text-white',
        icon: Docker
    },

}
const PROJECTS = [
{
    title: 'Sistema de Monitoreo de Sensores de un Vehículo con ESP32 y Java',
    description: 'Este sistema permitirá monitorear parámetros clave de un vehículo en tiempo real utilizando un ESP32 como unidad de adquisición de datos. La información se transmitirá mediante Wi-Fi o Bluetooth a una plataforma desarrollada en Java, que mostrará los datos en gráficos y permitirá almacenarlos para su análisis.',
    link:'#',
    github: '#',
    image: 'proyecto.jpg',
    tags: [TAGS.JAVA,TAGS.POSTGRESQL,TAGS.PYTHON],

},
{
    title: 'Cifrado y Autenticación en Comunicaciones dos Esp32',
    description: 'Este proyecto simulará la comunicación segura entre dos dispositivos embebidos en un entorno automotriz. Se implementarán técnicas de cifrado AES-128 y autenticación HMAC para garantizar la confidencialidad y la integridad de los datos transmitidos. El sistema también podrá detectar intentos de acceso no autorizado.',
    link:'#',
    github: '#',
    image: 'proyecto2.jpg',
    tags: [TAGS.JAVA,TAGS.CMM],
    order:'md:order-2'
},
{
    title: 'Sistema de Gestión para Restaurantes o Cafeterías',
    description: 'El sistema permitirá a los restaurantes gestionar pedidos, controlar el inventario, administrar el menú y realizar un seguimiento de sus empleados. Incluirá un panel administrativo para supervisar las operaciones diarias y generar reportes de ventas y consumo de inventario.',
    link:'#',
    github: '#',
    image: 'proyecto2.jpg',
    tags: [TAGS.NESTJS,TAGS.REACT,TAGS.DOCKER],
  
}

]
---

{
    PROJECTS.map(({title, description, tags, image, order}) =>(
    <div class="flex flex-col gap-y-16 mb-15">
        
        <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
         <div class={`w-full md:w-1/2 ${order}`} >
            <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
                <img class="transition-all duration-300 md:blur-xs hover:blur-none" src={image} alt={`Captura de pantalla del proyecto ${image}`}>
            </div>
         </div>
        
        <div class="w-full md:w-1/2 md:max-w-lg" >
            <h3 class="text-2xl font-semibold text-yellow-200 mb-2">{title}</h3>
            <p class="text-lg mb-4 text-pretty">{description}</p>
            <ul class="flex gap-x-4 flex-row mb-2">
                {tags.map(tag =>(
                    <li>
                        <span class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2`}>
                        <tag.icon class="size-4"/>
                        {tag.name}
                        </span>
                    </li>
                ))}
            </ul>
            <nav class="flex gap-5 mt-4 flex-wrap">
                <SocialPill href="#">
                    <GitHub class ="size-4 md:size-6"></GitHub>
                    GitHub
                </SocialPill>
                <SocialPill href="#">
                    <Preview class ="size-4 md:size-6"></Preview>
                    Preview
                </SocialPill> 
            </nav>

        </div>
        </article>
        
    </div>
    ))
 }